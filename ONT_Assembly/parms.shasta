
Options allowed only on the command line:
  -h [ --help ]                         Write a help message.
  -v [ --version ]                      Identify the Shasta version.
  --config arg                          Configuration file name.
  --input arg                           Names of input files containing reads. 
                                        Specify at least one.
  --assemblyDirectory arg (=ShastaRun)  Name of the output directory. If 
                                        command is assemble, this directory 
                                        must not exist.
  --command arg (=assemble)             Command to run. Must be one of: 
                                        assemble, saveBinaryData, 
                                        cleanupBinaryData, explore, 
                                        createBashCompletionScript
  --memoryMode arg (=anonymous)         Specify whether allocated memory is 
                                        anonymous or backed by a filesystem. 
                                        Allowed values: anonymous, filesystem.
  --memoryBacking arg (=4K)             Specify the type of pages used to back 
                                        memory.
                                        Allowed values: disk, 4K , 2M (for best
                                        performance). All combinations 
                                        (memoryMode, memoryBacking) are allowed
                                        except for (anonymous, disk).
                                        Some combinations require root 
                                        privilege, which is obtained using sudo
                                        and may result in a password prompting 
                                        depending on your sudo set up.
  --threads arg (=0)                    Number of threads, or 0 to use one 
                                        thread per virtual processor.
  --exploreAccess arg (=user)           Specify allowed access for --command 
                                        explore. Allowed values: user, local, 
                                        unrestricted. DO NOT CHANGE FROM 
                                        DEFAULT VALUE WITHOUT UNDERSTANDING THE
                                        SECURITY IMPLICATIONS.
  --port arg (=17100)                   Port to be used by the http server 
                                        (command --explore).

Options allowed on the command line and in the config file:
  --Reads.minReadLength arg (=10000)    Read length cutoff. Shorter reads are 
                                        discarded.
  --Reads.noCache                       If set, skip the Linux cache when 
                                        loading reads. This is done by 
                                        specifying the O_DIRECT flag when 
                                        opening input files containing reads.
  --Reads.palindromicReads.skipFlagging 
                                        Skip flagging palindromic reads. Oxford
                                        Nanopore reads should be flagged for 
                                        better results.
  --Reads.palindromicReads.maxSkip arg (=100)
                                        Used for palindromic read detection.
  --Reads.palindromicReads.maxDrift arg (=100)
                                        Used for palindromic read detection.
  --Reads.palindromicReads.maxMarkerFrequency arg (=10)
                                        Used for palindromic read detection.
  --Reads.palindromicReads.alignedFractionThreshold arg (=0.1)
                                        Used for palindromic read detection.
  --Reads.palindromicReads.nearDiagonalFractionThreshold arg (=0.1)
                                        Used for palindromic read detection.
  --Reads.palindromicReads.deltaThreshold arg (=100)
                                        Used for palindromic read detection.
  --Kmers.generationMethod arg (=0)     Method to generate marker k-mers: 0 = 
                                        random, 1 = random, excluding globally 
                                        overenriched,2 = random, excluding 
                                        overenriched even in a single read,3 = 
                                        read from file.
  --Kmers.k arg (=10)                   Length of marker k-mers (in run-length 
                                        space).
  --Kmers.probability arg (=0.1)        Fraction k-mers used as a marker.
  --Kmers.enrichmentThreshold arg (=100.)
                                        Enrichment threshold for 
                                        Kmers.generationMethod 1 and 2.
  --Kmers.file arg                      The absolute path of a file containing 
                                        the k-mers to be used as markers, one 
                                        per line. A relative path is not 
                                        accepted. Only used if 
                                        Kmers.generationMethod is 3.
  --MinHash.version arg (=0)            Controls the version of the LowHash 
                                        algorithm to use. Can be 0 (default) or
                                        1.(experimental).
  --MinHash.m arg (=4)                  The number of consecutive markers that 
                                        define a MinHash/LowHash feature.
  --MinHash.hashFraction arg (=0.01)    Defines how low a hash has to be to be 
                                        used with the LowHash algorithm.
  --MinHash.minHashIterationCount arg (=10)
                                        The number of MinHash/LowHash 
                                        iterations, or 0 to let 
                                        --MinHash.alignmentCandidatesPerRead 
                                        control the number of iterations.
  --MinHash.alignmentCandidatesPerRead arg (=20)
                                        If --MinHash.minHashIterationCount is 
                                        0, MinHash iteration is stopped when 
                                        the average number of alignment 
                                        candidates that each read is involved 
                                        in reaches this value. If 
                                        --MinHash.minHashIterationCount is not 
                                        0, this is not used.
  --MinHash.minBucketSize arg (=0)      The minimum bucket size to be used by 
                                        the LowHash algoritm.
  --MinHash.maxBucketSize arg (=10)     The maximum bucket size to be used by 
                                        the LowHash algoritm.
  --MinHash.minFrequency arg (=2)       The minimum number of times a pair of 
                                        reads must be found by the 
                                        MinHash/LowHash algorithm in order to 
                                        be considered a candidate alignment.
  --MinHash.allPairs                    Skip the MinHash algorithm and mark all
                                        pairs of reads as alignmentcandidates 
                                        with both orientation. This should only
                                        be used for experimentation on very 
                                        small runs because it is very time 
                                        consuming.
  --Align.alignMethod arg (=3)          The alignment method to be used to 
                                        create the read graph & the marker 
                                        graph. 0 = old Shasta method, 1 = SeqAn
                                        (slow), 3 = banded SeqAn.
  --Align.maxSkip arg (=30)             The maximum number of markers that an 
                                        alignment is allowed to skip.
  --Align.maxDrift arg (=30)            The maximum amount of marker drift that
                                        an alignment is allowed to tolerate 
                                        between successive markers.
  --Align.maxTrim arg (=30)             The maximum number of unaligned markers
                                        tolerated at the beginning and end of 
                                        an alignment.
  --Align.maxMarkerFrequency arg (=10)  Marker frequency threshold. Markers 
                                        more frequent than this value in either
                                        of two oriented reads being aligned are
                                        discarded and not used to compute the 
                                        alignment.
  --Align.minAlignedMarkerCount arg (=100)
                                        The minimum number of aligned markers 
                                        for an alignment to be used.
  --Align.minAlignedFraction arg (=0)   The minimum fraction of aligned markers
                                        for an alignment to be used.
  --Align.matchScore arg (=6)           Match score for marker alignments (only
                                        used for alignment methods 1 and 3).
  --Align.mismatchScore arg (=-1)       Mismatch score for marker alignments 
                                        (only used for alignment methods 1 and 
                                        3).
  --Align.gapScore arg (=-1)            Gap score for marker alignments (only 
                                        used for alignment methods 1 and 3).
  --Align.downsamplingFactor arg (=0.10000000000000001)
                                        Downsampling factor (only used for 
                                        alignment method 3).
  --Align.bandExtend arg (=10)          Amount to extend the downsampled band 
                                        (only used for alignment method 3).
  --Align.sameChannelReadAlignment.suppressDeltaThreshold arg (=0)
                                        If not zero, alignments between reads 
                                        from the same nanopore channel and 
                                        close in time are suppressed. The 
                                        "read" meta data fields from the FASTA 
                                        or FASTQ header are checked. If their 
                                        difference, in absolute value, is less 
                                        than the value of this option, the 
                                        alignment is suppressed. This can help 
                                        avoid assembly artifact. This check is 
                                        only done if the two reads have 
                                        identical meta data fields "runid", 
                                        "sampleid", and "ch". If any of these 
                                        meta data fields are missing, this 
                                        check is suppressed and this option has
                                        no effect.
  --Align.suppressContainments          Suppress containment alignments, that 
                                        is alignments in which one read is 
                                        entirely contained in another read, 
                                        except possibly for up to maxTrim 
                                        markers at the beginning and end.
  --ReadGraph.creationMethod arg (=0)   The method used to create the read 
                                        graph (0 = undirected, default, 1 = 
                                        directed, experimental).
  --ReadGraph.maxAlignmentCount arg (=6)
                                        The maximum number of alignments to be 
                                        kept for each read.
  --ReadGraph.minComponentSize arg (=100)
                                        The minimum size (number of oriented 
                                        reads) of a connected component of the 
                                        read graph to be kept. This is 
                                        currently ignored.
  --ReadGraph.maxChimericReadDistance arg (=2)
                                        Used for chimeric read detection.
  --ReadGraph.crossStrandMaxDistance arg (=6)
                                        Maximum distance (edges) for 
                                        flagCrossStrandReadGraphEdges. Set this
                                        to zero to entirely suppress 
                                        flagCrossStrandReadGraphEdges.
  --ReadGraph.containedNeighborCount arg (=6)
                                        Maximum number of alignments to be kept
                                        for each contained read (only used when
                                        creationMethod is 1).
  --ReadGraph.uncontainedNeighborCountPerDirection arg (=3)
                                        Maximum number of alignments to be kept
                                        in each direction (forward, backward) 
                                        for each uncontained read (only used 
                                        when creationMethod is 1).
  --ReadGraph.removeConflicts           Remove conflicts from the read graph. 
                                        Experimental - do not use.
  --MarkerGraph.minCoverage arg (=10)   Minimum number of markers for a marker 
                                        graph vertex.
  --MarkerGraph.maxCoverage arg (=100)  Maximum number of markers for a marker 
                                        graph vertex.
  --MarkerGraph.lowCoverageThreshold arg (=0)
                                        Used during approximate transitive 
                                        reduction. Marker graph edges with 
                                        coverage lower than this value are 
                                        always marked as removed regardless of 
                                        reachability.
  --MarkerGraph.highCoverageThreshold arg (=256)
                                        Used during approximate transitive 
                                        reduction. Marker graph edges with 
                                        coverage higher than this value are 
                                        never marked as removed regardless of 
                                        reachability.
  --MarkerGraph.maxDistance arg (=30)   Used during approximate transitive 
                                        reduction.
  --MarkerGraph.edgeMarkerSkipThreshold arg (=100)
                                        Used during approximate transitive 
                                        reduction.
  --MarkerGraph.pruneIterationCount arg (=6)
                                        Number of prune iterations.
  --MarkerGraph.simplifyMaxLength arg (=10,100,1000)
                                        Maximum lengths (in markers) used at 
                                        each iteration of simplifyMarkerGraph.
  --MarkerGraph.crossEdgeCoverageThreshold arg (=0)
                                        Experimental. Cross edge coverage 
                                        threshold. If this is not zero, 
                                        assembly graph cross-edges with average
                                        edge coverage less than this value are 
                                        removed, together with the 
                                        corresponding marker graph edges. A 
                                        cross edge is defined as an edge v0->v1
                                        with out-degree(v0)>1, in-degree(v1)>1.
  --MarkerGraph.refineThreshold arg (=0)
                                        Experimental. Length threshold, in 
                                        markers, for the marker graph 
                                        refinement step, or 0 to turn off the 
                                        refinement step.
  --MarkerGraph.reverseTransitiveReduction 
                                        Perform approximate reverse transitive 
                                        reduction of the marker graph.
  --Assembly.crossEdgeCoverageThreshold arg (=3)
                                        Maximum average edge coverage for a 
                                        cross edge of the assembly graph to be 
                                        removed.
  --Assembly.markerGraphEdgeLengthThresholdForConsensus arg (=1000)
                                        Controls assembly of long marker graph 
                                        edges.
  --Assembly.consensusCaller arg (=Bayesian:guppy-2.3.5-a)
                                        Selects the consensus caller for repeat
                                        counts. See the documentation for 
                                        available choices.
  --Assembly.storeCoverageData          Used to request storing coverage data 
                                        in binary format.
  --Assembly.storeCoverageDataCsvLengthThreshold arg (=0)
                                        Used to specify the minimum length of 
                                        an assembled segment for which coverage
                                        data in csv format should be stored. If
                                        0, no coverage data in csv format is 
                                        stored.
  --Assembly.writeReadsByAssembledSegment 
                                        Used to request writing the reads that 
                                        contributed to assembling each segment.
  --Assembly.detangleMethod arg (=0)    Experimental. Specify the method used 
                                        to detangle the assembly graph. 0 = no 
                                        detangling, 1 = basic detangling.

